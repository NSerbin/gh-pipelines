name: Linter

on:
  workflow_call:
    inputs:
      linter:
        description: "Enable lint"
        default: false
        type: boolean 
      python-version:
        description: "Set Python version"
        default: 3.11
        type: string
      language:
        description: "Set the language to be linted"
        type: string
        default: node 
      python-linter-enable:
        description: "Enable Python linter"
        default: false
        type: boolean
      terraform-version:
        description: "Enable Terraform linter"
        default: 1.9.3
        type: string

jobs:    
  python-linter:
    name: Python Linter
    if: ${{ inputs.linter && inputs.language == 'python' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 0
         
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }} 
          
      - name: Install dependencies      
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          
      - name: Run Ruff Linter
        id: run-ruff-linter
        run: |
          ruff check --config github-pipeline-templates/.github/config/.ruff.toml --output-format=grouped . > lint_output.txt || true
          echo "## Lint Report" 
          cat lint_output.txt
          if grep -q "Found" lint_output.txt; then
            exit 1
          fi
      
      - name: Save Lint Results
        if: always() && inputs.linter && inputs.language == 'python'  
        run: |
          echo "## Lint Report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat lint_output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  terraform-checks:
    name: Terraform Checks
    runs-on: ubuntu-latest
    if: ${{ inputs.linter && inputs.language == 'terraform' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 0
          ref: "${{ github.head_ref || github.ref }}"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: ${{ inputs.terraform-version }}
      - name: Terraform Init
        id: init
        run: terraform init          
      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -diff -write=true
        continue-on-error: true
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Commit Terraform FMT Changes
        if: ${{ steps.fmt.outcome == 'success' }}      
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: "Auto-format Terraform files"          